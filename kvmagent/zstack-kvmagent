#!/bin/sh

# the following is chkconfig init header
#
# zstack-kvmagent:   zstack kvm agent daemon
#
# chkconfig: 345 97 03
# description:  This is a daemon instructed by zstack management server \
#               to perform kvm related operations\
#               See http://zstack.org
#
# processname: kvmagent
# pidfile: /var/run/zstack/kvmagent.pid
#

check_status() {
	pidfile='/var/run/zstack/kvmagent.pid'
	if [ ! -f $pidfile ]; then
		echo "zstack kvm agent is stopped"
		exit 1
	else
		pid=`cat $pidfile`
		ps -p $pid > /dev/null
		if [ $? -eq 0 ]; then
			echo "zstack kvm agent is running, pid is $pid"
			exit 0
		else
			echo "zstack kvm agent is stopped, but pidfile at $pidfile is not cleaned. It may be caused by kvm agent crashed at last time, manually cleaning it would be ok"
			exit 1
		fi
	fi
}

if [ $# -eq 0 ]; then
	echo "usage: $0
[start|stop|restart|status]"
	exit 1
fi

apply_resource_settings() {
	n=$(ulimit -n)
	if [ "$n" -lt 32768 ]; then
		ulimit -Hn 32768 && ulimit -Sn 32768 || true
	fi
	
	n=$(sysctl fs.inotify.max_user_instances -n)
	if [ "$n" -lt 1024 ]; then
		sysctl -w fs.inotify.max_user_instances=1024 >> /etc/sysctl.conf || true
	fi
	
	# try to avoid 'hung_task_timeout_secs' issue
	sysctl -w vm.dirty_ratio=10 > /dev/null
	sysctl -w vm.dirty_background_ratio=5 > /dev/null

	echo 0 > /sys/kernel/mm/ksm/merge_across_nodes || true

	# try to avoid kmem alloc failure
	totalMemGiB=`free -g | awk '/^Mem/{print $2}'`
	if test $totalMemGiB -gt 255; then
		sysctl -w vm.min_free_kbytes=$((3*1024*1024))
	elif test $totalMemGiB -gt 127; then
		sysctl -w vm.min_free_kbytes=$((2*1024*1024))
	elif test $totalMemGiB -gt 63; then
		sysctl -w vm.min_free_kbytes=$((1024*1024))
	elif test $totalMemGiB -gt 31; then
		sysctl -w vm.min_free_kbytes=$((1024*384))
	fi
}

# enable coredump for existing qemu-kvm processes
enable_qemukvm_coredump() {
	for pid in `ps -x -ocomm,pid | awk '$1 == "qemu-kvm" {print $2}'`; do
		prlimit --core=$((4*1024*1024)) --pid $pid || true
	done
}

rm_ebtables_dangling_lock() {
        lockfile=$1
        test -e $lockfile || return
        lsof $lockfile 2>/dev/null >/dev/null && return
        unlink $lockfile
}

if [ "$@" = "status" ]; then
	check_status
else
	if [ "$@" = "start" ]; then
		apply_resource_settings
		enable_qemukvm_coredump
		rm_ebtables_dangling_lock '/var/lib/ebtables/lock' #C72
		rm_ebtables_dangling_lock '/run/ebtables.lock'   #C74
	fi

	. /var/lib/zstack/virtualenv/kvm/bin/activate && python -c "from kvmagent import kdaemon; kdaemon.main()" "$@"
fi

if [ $? -eq 0 ]; then
    echo "$@ zstack kvm agent .... SUCCESS"
    exit 0
else
    echo "$@ zstack kvm agent .... FAILED"
    exit 1
fi
